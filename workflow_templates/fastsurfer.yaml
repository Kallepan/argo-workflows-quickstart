apiVersion: v1
kind: ConfigMap
metadata:
  name: artifact-repositories
  namespace: kite-ference
  annotations:
    workflows.argoproj.io/default-artifact-repository: v1-s3-artifact-repository
data:
  v1-s3-artifact-repository: |
    s3:
      endpoint: s3.kite.ume.de
      bucket: kite-ference
      # insecure: true
      accessKeySecret:
        name: s3-creds
        key: accessKey
      secretKeySecret:
        name: s3-creds
        key: secretKey
---
# This template is an example fastsurfer pipeline. It will execute two steps:
# 1. Convert the source images from DICOM to NIFTI format
# 2. Run the fastsurfer pipeline on the NIFTI images
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: fastsurfer-pipeline
  namespace: kite-ference
spec:
  entrypoint: main
  volumes:
    - name: fastsurfer-license-pv
      secret:
        secretName: fastsurfer-license
  arguments:
    parameters:
      - name: caseID
        value: "subjectX"
  templates:
    - name: main
      steps:
        - - name: dicom-nifti-converter
            template: dicom-nifti-converter
        - - name: fastsurfer
            template: fastsurfer
            arguments:
              artifacts:
                - name: nifti-image
                  from: "{{steps.dicom-nifti-converter.outputs.artifacts.nifti-image}}"

    # DICOM to NIFTI converter
    - name: dicom-nifti-converter
      inputs:
        artifacts:
          - name: images
            path: /data
            s3:
              key: test_data/dicom
      container:
        image: kallepan/dicom-nifti-converter:0.0.1

        env:
          - name: OUTPUT_FILE_NAME
            value: "{{workflow.parameters.caseID}}"
      outputs:
        artifacts:
          - name: nifti-image
            path: /output

    # FastSurfer 
    - name: fastsurfer
      inputs:
        artifacts:
          - name: nifti-image
            path: /data
      nodeSelector:
        kite-ference.ikim.nrw/dgx: 'true'
      container:
        image: deepmi/fastsurfer:gpu-v2.2.0
        args:
          - "--sd"
          - "/output"
          - "--sid"
          - "{{workflow.parameters.caseID}}"
          - "--t1"
          - "/data/{{workflow.parameters.caseID}}.nii.gz"
          - "--seg_only"
          - "--parallel"
          - "--threads"
          - "16"
          - "--batch"
          - "32"
          - "--allow_root"
        resources:
          limits:
            cpu: '8'
            memory: 16Gi
            nvidia.com/gpu: '1'
          requests:
            cpu: '8'
            memory: 16Gi
            nvidia.com/gpu: '1'
        volumeMounts:
          - name: fastsurfer-license-pv
            mountPath: /fs_license
            readOnly: true
      outputs:
        artifacts:
          - name: output
            path: /output
            s3:
              key: outputs/{{workflow.uid}}/output.tgz
